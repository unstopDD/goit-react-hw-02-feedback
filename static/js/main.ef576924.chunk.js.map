{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/Section/Section.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","styles","wrapper","Statistics","good","neutral","bad","total","positivePercentage","s","item","FeedbackOptions","onLeaveFeedback","options","map","option","button","name","onClick","toUpperCase","slice","Notification","message","App","state","handleAddFeedback","e","target","setState","prevState","countTotalFeedback","Object","values","reduce","acc","value","countPositiveFeedbackPercentage","Math","round","this","isShowStatistics","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,KAAO,2B,iBCAzBD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,oBCA7DD,EAAOC,QAAU,CAAC,OAAS,kC,gBCA3BD,EAAOC,QAAU,CAAC,QAAU,gC,qKCgBbC,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASC,UAAWC,IAAOC,QAA3B,UACE,oBAAIF,UAAWC,IAAOH,MAAtB,SAA8BA,IAC7BC,M,gBCeQI,EApBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,+BACE,qBAAIR,UAAWS,IAAEC,KAAjB,mBAA8BN,KAC9B,qBAAIJ,UAAWS,IAAEC,KAAjB,sBAAiCL,EAAjC,OACA,qBAAIL,UAAWS,IAAEC,KAAjB,kBAA6BJ,EAA7B,OACA,qBAAIN,UAAWS,IAAEC,KAAjB,oBAA+BH,KAC/B,qBAAIP,UAAWS,IAAEC,KAAjB,gCAA2CF,EAA3C,Y,gBCeSG,EAtBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,gBAAiBC,EAAc,EAAdA,QAC1C,OACE,mCACGA,EAAQC,KAAI,SAAAC,GAAM,OACjB,wBACEf,UAAWS,IAAEO,OACbC,KAAMF,EAENG,QAASN,EAJX,SAMGG,EAAO,GAAGI,cAAgBJ,EAAOK,MAAM,IAHnCL,S,iBCGAM,EARM,SAAC,GAAgC,IAAD,IAA7BC,eAA6B,MAAnB,aAAmB,EACnD,OAAO,oBAAItB,UAAWS,IAAEa,QAAjB,SAA2BA,KCuDrBC,EAvDf,4MAGEC,MAAQ,CACNpB,KAAM,EACNC,QAAS,EACTC,IAAK,GANT,EASEmB,kBAAoB,SAAAC,GAClB,IAAMC,EAASD,EAAEC,OAAOV,KACxB,EAAKW,UAAS,SAAAC,GACZ,OAAO,eAAGF,EAASE,EAAUF,GAAU,OAZ7C,EAgBEG,mBAAqB,WACnB,OAAOC,OAAOC,OAAO,EAAKR,OAAOS,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IAAO,IAjBzE,EAoBEC,gCAAkC,SAAA7B,GAAK,OACrC8B,KAAKC,MAAO,EAAKd,MAAMpB,KAAOG,EAAS,MArB3C,uDAuBY,IAAD,EACwBgC,KAAKf,MAA5BpB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQgC,KAAKT,qBACbtB,EAAqB+B,KAAKH,gCAAgC7B,GAC1DiC,EAAmBjC,EAAQ,EAEjC,OACE,qCACE,cAAC,EAAD,CAAST,MAAO,wBAAhB,SACE,cAAC,EAAD,CACEc,gBAAiB2B,KAAKd,kBACtBZ,QAASkB,OAAOU,KAAKF,KAAKf,WAI9B,eAAC,EAAD,CAAS1B,MAAM,aAAf,UACG0C,GACC,cAAC,EAAD,CACEpC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,KAGtBgC,GAAoB,cAAC,EAAD,CAAclB,QAAQ,gCAhDtD,GAAyBoB,aCDzBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ef576924.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Statistics_item__2gi3p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Section_wrapper__3I5Ux\",\"title\":\"Section_title__2lfdv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__1OSlH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__2tV3a\"};","import React from 'react';\nimport styles from './Section.module.css';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={styles.wrapper}>\n      <h2 className={styles.title}>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <ul>\n      <li className={s.item}>Good: {good}</li>\n      <li className={s.item}>Neutral: {neutral} </li>\n      <li className={s.item}>Bad: {bad} </li>\n      <li className={s.item}>Total: {total}</li>\n      <li className={s.item}>Positive feedback: {positivePercentage}% </li>\n    </ul>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ onLeaveFeedback, options }) => {\n  return (\n    <>\n      {options.map(option => (\n        <button\n          className={s.button}\n          name={option}\n          key={option}\n          onClick={onLeaveFeedback}\n        >\n          {option[0].toUpperCase() + option.slice(1)}\n        </button>\n      ))}\n    </>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\n  onIncrement: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './Notification.module.css';\n\nconst Notification = ({ message = 'Not found!' }) => {\n  return <h2 className={s.message}>{message}</h2>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport Section from './components/Section';\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Notification from './components/Notification';\n\nexport class App extends Component {\n  static propTypes = {};\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleAddFeedback = e => {\n    const target = e.target.name;\n    this.setState(prevState => {\n      return { [target]: prevState[target] + 1 };\n    });\n  };\n\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce((acc, value) => acc + value, 0);\n  };\n\n  countPositiveFeedbackPercentage = total =>\n    Math.round((this.state.good / total) * 100);\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage(total);\n    const isShowStatistics = total > 0;\n\n    return (\n      <>\n        <Section title={'Please leave feedback'}>\n          <FeedbackOptions\n            onLeaveFeedback={this.handleAddFeedback}\n            options={Object.keys(this.state)}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {isShowStatistics && (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          )}\n          {!isShowStatistics && <Notification message=\"No feedback given\" />}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}